version: '3'

services:

  frontend:
    build: 
      context: ./website/src/frontend/Dockerfile
      
    depends_on:
      - backend-services
      - api-services
      
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr

    volumes:
      - frontend
    restart: always
    ports:
      - 5001:8080

  backend:
    build: 
      context: ./website/src/backend/Dockerfile
    depends_on:
      - postgres
    volumes:
      - backend
    restart: always
    ports:
      - 5002:8081

  api:
    build: 
      context: .
    restart: always
    volumes: 
      - api
    ports:
    - 5003:8082

    depends_on:
      - postgres

  nginx:
    build:
      context: .
      image: nginx:alpine

    ports:
      - 443:443
    depends_on:
      - api
      - backend
      - frontend
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr

  postgres:
    image: postgres:latest

    expose:
    - 5432

    environment:
      POSTGRES_USER: "utilitybot"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "databasename"
    

      
